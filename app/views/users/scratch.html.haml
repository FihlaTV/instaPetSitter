
.cat_dog_tab
  .container.text-center
    .row
      .col-xs-12.col-sm-6{:role => "tabpanel"}
        / Nav tabs
        %ul#nav-tabs.nav.nav-jasmine{:role => "tablist"}
          %li.col-xs-3.active{:role => "presentation"}
            %a{"aria-controls" => "dog", "data-toggle" => "tab", :href => "#dogicon", :role => "tab"}
              =image_tag("dogicon.jpg", class:"img-circle", id: "img" , size: "70x70")
          %li.col-xs-3{:role => "presentation"}
            %a{"aria-controls" => "cat", "data-toggle" => "tab", :href => "#caticon", :role => "tab"}
              =image_tag("caticon.jpg", class:"img-circle", size: "70x70")
          %li.col-xs-3{:role => "presentation"}
            %a{"aria-controls" => "other", "data-toggle" => "tab", :href => "#othericon", :role => "tab"}
              =image_tag("other.jpg", class:"img-circle", size: "70x70")
          %li.col-xs-3{:role => "presentation"}
            %a{"aria-controls" => "multi", "data-toggle" => "tab", :href => "#multiicon", :role => "tab"}
              =image_tag("multipet.jpg", class:"img-circle", size: "70x70")

        / Tab panes
        #tabs-collapse.tab-content
          #dogicon.tab-pane.fade.in.active{:role => "tabpanel"}
            .container.tab-inner
              .row.form-group
                .col-xs-12.col-sm-6
                  %ul.contact-list.list-group
                    = render @dog_sitters
                .col-xs-12.col-sm-6
                  #dog-map

          #caticon.tab-pane.fade{:role => "tabpanel"}
            .container.tab-inner
              .row.form-group
                .col-xs-12.col-sm-6
                  %ul.contact-list.list-group
                    = render @cat_sitters
                    #cat-map

          #othericon.tab-pane.fade{:role => "tabpanel"}
            .container.tab-inner
              .row.form-group
                .col-xs-12.col-sm-6
                  %ul.contact-list.list-group
                    = render @other_sitters
                    #other-map

          #multiicon.tab-pane.fade{:role => "tabpanel"}
            .container.tab-inner
              .row.form-group
                .col-xs-12.col-sm-6
                  %ul.contact-list.list-group
                    = render @multi_sitters
                    #multi-map

%script{src: "https://maps.googleapis.com/maps/api/js?key=#{ENV["GOOGLE_API_KEY"]}"}
-# %script{src: "https://maps.googleapis.com/maps/api/js"}

:javascript
  $(document).on("turbolinks:load", function() {
    if (!document.getElementById('dog-map')) {
      return
    }

    var latitude = #{@latitude.to_f};
    var longitude = #{@longitude.to_f};

    var dog_sitters = #{@dog_sitters.to_json};

    var dog_map = new google.maps.Map(document.getElementById('dog-map'), {
                    zoom: 11,
                    center: new google.maps.LatLng(latitude, longitude),
                    mapTypeId: 'terrain'
                  });

    // Add a special marker just for the user
    var latLng = new google.maps.LatLng(latitude, longitude);
    var marker = new google.maps.Marker({
      position: latLng,
      icon: "https://maps.google.com/mapfiles/kml/shapes/info-i_maps.png",
      // icon: "#{image_url("caticon.jpg")}",
      map: dog_map
    });

    function attachInfoWindow(marker, message) {
      marker.addListener('click', function() {
        var infowindow = new google.maps.InfoWindow({
          content: message,
          maxWidth: 200
        });

        infowindow.open(marker.get('map'), marker);
      });
    }

    for (var i = 0; i < dog_sitters.length; i++) {
      var userId = dog_sitters[i].id
      var lat    = dog_sitters[i].latitude
      var lng    = dog_sitters[i].longitude

      var latLng = new google.maps.LatLng(lat, lng);
      var marker = new google.maps.Marker({
        position: latLng,
        map: dog_map
      });

      var contentString = '<div><a href="/users/' + userId + '">' + dog_sitters[i].name + '</a></div>'
      attachInfoWindow(marker, contentString)
    }


    var cat_sitters = #{@cat_sitters.to_json};


    var cat_map = new google.maps.Map(document.getElementById('cat-map'), {
                    zoom: 11,
                    center: new google.maps.LatLng(latitude, longitude),
                    mapTypeId: 'terrain'
                  });

    // Add a special marker just for the user
    var latLng = new google.maps.LatLng(latitude, longitude);
    var marker = new google.maps.Marker({
      position: latLng,
      icon: "https://maps.google.com/mapfiles/kml/shapes/info-i_maps.png",
      // icon: "#{image_url("caticon.jpg")}",
      map: cat_map
    });

    function attachInfoWindow(marker, message) {
      marker.addListener('click', function() {
        var infowindow = new google.maps.InfoWindow({
          content: message,
          maxWidth: 200
        });

        infowindow.open(marker.get('map'), marker);
      });
    }

    for (var i = 0; i < cat_sitters.length; i++) {
      var userId = cat_sitters[i].id
      var lat    = cat_sitters[i].latitude
      var lng    = cat_sitters[i].longitude

      var latLng = new google.maps.LatLng(lat, lng);
      var marker = new google.maps.Marker({
        position: latLng,
        map: cat_map
      });

      var contentString = '<div><a href="/users/' + userId + '">' + cat_sitters[i].name + '</a></div>'
      attachInfoWindow(marker, contentString)
    }


    var other_sitters = #{@other_sitters.to_json};
    var other_map = new google.maps.Map(document.getElementById('other-map'), {
                    zoom: 11,
                    center: new google.maps.LatLng(latitude, longitude),
                    mapTypeId: 'terrain'
                  });

    // Add a special marker just for the user
    var latLng = new google.maps.LatLng(latitude, longitude);
    var marker = new google.maps.Marker({
      position: latLng,
      icon: "https://maps.google.com/mapfiles/kml/shapes/info-i_maps.png",
      // icon: "#{image_url("caticon.jpg")}",
      map: cat_map
    });

    function attachInfoWindow(marker, message) {
      marker.addListener('click', function() {
        var infowindow = new google.maps.InfoWindow({
          content: message,
          maxWidth: 200
        });

        infowindow.open(marker.get('map'), marker);
      });
    }

    for (var i = 0; i < other_sitters.length; i++) {
      var userId = other_sitters[i].id
      var lat    = other_sitters[i].latitude
      var lng    = other_sitters[i].longitude

      var latLng = new google.maps.LatLng(lat, lng);
      var marker = new google.maps.Marker({
        position: latLng,
        map: other_map
      });

      var contentString = '<div><a href="/users/' + userId + '">' + other_sitters[i].name + '</a></div>'
      attachInfoWindow(marker, contentString)
    }


    var multi_sitters = #{@multi_sitters.to_json};

    var multi_map = new google.maps.Map(document.getElementById('multi-map'), {
                    zoom: 11,
                    center: new google.maps.LatLng(latitude, longitude),
                    mapTypeId: 'terrain'
                  });

    // Add a special marker just for the user
    var latLng = new google.maps.LatLng(latitude, longitude);
    var marker = new google.maps.Marker({
      position: latLng,
      icon: "https://maps.google.com/mapfiles/kml/shapes/info-i_maps.png",
      // icon: "#{image_url("caticon.jpg")}",
      map: multi_map
    });

    function attachInfoWindow(marker, message) {
      marker.addListener('click', function() {
        var infowindow = new google.maps.InfoWindow({
          content: message,
          maxWidth: 200
        });

        infowindow.open(marker.get('map'), marker);
      });
    }

    for (var i = 0; i < multi_sitters.length; i++) {
      var userId = multi_sitters[i].id
      var lat    = multi_sitters[i].latitude
      var lng    = multi_sitters[i].longitude

      var latLng = new google.maps.LatLng(lat, lng);
      var marker = new google.maps.Marker({
        position: latLng,
        map: multi_map
      });

      var contentString = '<div><a href="/users/' + userId + '">' + multi_sitters[i].name + '</a></div>'
      attachInfoWindow(marker, contentString)
    }
